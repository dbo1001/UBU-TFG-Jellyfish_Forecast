2020-06-16 17:44:27.277524 --------- dfAtributosNormalizado_0_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 1.9427347898483276--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [13, 6, 4, 10, 3, 7, 11, 15, 9, 8],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.007924266656239827--> SVR GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.03283767302831014--> arbol_decision GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [4, 25, 91, 56, 164, 22, 122, 12, 19, 179,
                                       44, 127, 110, 63, 166, 37, 137, 148, 153,
                                       6],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.02974158525466919--> Boosting GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [159, 33, 42, 122, 99],
                         'n_estimators': [232, 219, 367, 397, 297]})
Tiempo empleado: 2.3748752236366273--> Adaboost GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [122, 292, 135, 470, 480, 435, 325, 75,
                                          345, 73],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 1.4989526828130086--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [40, 14, 37, 15, 32, 45, 6, 27, 31, 16],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [5, 44, 40, 29, 12],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 3.233403046925863--> MLP GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 57.803896347681682020-06-16 18:51:22.926486 --------- dfAtributosNormalizado_0_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 3.89306104183197--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [10, 3, 9, 11, 16, 5, 6, 7, 15, 8],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.010495626926422119--> SVR GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.07311826546986898--> arbol_decision GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [128, 96, 158, 29, 185, 121, 103, 152,
                                       173, 41, 176, 175, 66, 3, 63, 62, 102,
                                       67, 160, 126],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.03996563752492269--> Boosting GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [140, 18, 87, 177, 64],
                         'n_estimators': [431, 23, 390, 118, 273]})
Tiempo empleado: 3.584601660569509--> Adaboost GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [126, 29, 401, 219, 338, 120, 429, 71,
                                          132, 41],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 1.6806307514508565--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [42, 25, 36, 38, 35, 21, 23, 32, 44, 47],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [14, 4, 49, 23, 43],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 7.00622189839681--> MLP GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 24.7198460221290582020-06-16 19:32:23.541775 --------- dfAtributosNormalizado_0_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 8.638386901219686--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [4, 7, 6, 9, 10, 18, 3, 13, 8, 14],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.021799004077911376--> SVR GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.17861850261688234--> arbol_decision GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [157, 55, 28, 126, 97, 175, 68, 12, 189,
                                       22, 56, 61, 144, 149, 159, 191, 87, 45,
                                       104, 198],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.11446491877237956--> Boosting GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [181, 137, 161, 104, 52],
                         'n_estimators': [409, 298, 30, 93, 115]})
Tiempo empleado: 7.620260095596313--> Adaboost GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [455, 413, 48, 471, 93, 345, 169, 166,
                                          276, 9],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 5.192585976918538--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [24, 28, 3, 13, 10, 6, 23, 26, 46, 21],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [43, 5, 44, 10, 30],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 12.008785502115886--> MLP GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 103.798523414134982020-06-16 21:49:58.153895 --------- dfAtributosNormalizado_14_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 1.4500937263170879--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [5, 12, 13, 11, 7, 6, 8, 4, 14, 15],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.006175402800242106--> SVR GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.03863442341486613--> arbol_decision GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [29, 63, 187, 43, 98, 199, 100, 95, 8, 5,
                                       177, 39, 163, 6, 45, 22, 131, 112, 30,
                                       111],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.020511674880981445--> Boosting GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [106, 109, 58, 146, 118],
                         'n_estimators': [179, 445, 62, 353, 10]})
Tiempo empleado: 1.3053961634635924--> Adaboost GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [133, 172, 186, 76, 90, 355, 142, 66,
                                          479, 96],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 0.9091028690338134--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [38, 41, 46, 31, 33, 3, 16, 42, 30, 37],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [49, 40, 46, 42, 36],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 4.101903188228607--> MLP GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 56.43201578458152020-06-16 22:54:14.092244 --------- dfAtributosNormalizado_14_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 3.118574380874634--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [7, 12, 8, 14, 6, 9, 5, 16, 11, 15],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.009068608283996582--> SVR GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.08392094373703003--> arbol_decision GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [123, 139, 125, 114, 148, 183, 108, 95,
                                       143, 105, 35, 63, 68, 177, 33, 42, 164,
                                       119, 120, 37],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.04867025216420492--> Boosting GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [71, 163, 110, 69, 197],
                         'n_estimators': [205, 480, 21, 444, 101]})
Tiempo empleado: 4.187260194619497--> Adaboost GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [359, 459, 478, 219, 121, 456, 101,
                                          159, 493, 186],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 3.9033069610595703--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [23, 4, 17, 14, 35, 40, 5, 11, 26, 8],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [49, 38, 19, 27, 36],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 8.103768340746562--> MLP GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 27.4396125952402732020-06-16 23:41:07.953040 --------- dfAtributosNormalizado_14_dias_0_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 6.4320722103118895--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [9, 13, 18, 12, 7, 10, 3, 17, 15, 5],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.02467343807220459--> SVR GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.14826757907867433--> arbol_decision GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [125, 50, 134, 144, 67, 98, 137, 77, 185,
                                       112, 66, 157, 142, 70, 90, 21, 63, 43,
                                       140, 17],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.095951509475708--> Boosting GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [198, 25, 99, 131, 93],
                         'n_estimators': [346, 487, 56, 38, 151]})
Tiempo empleado: 6.680780812104543--> Adaboost GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [207, 373, 229, 44, 156, 467, 247, 236,
                                          301, 385],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 5.317141306400299--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [43, 49, 17, 11, 20, 29, 33, 3, 21, 46],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [22, 10, 41, 35, 46],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 14.034018429120382--> MLP GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 107.65654687881472020-06-17 02:01:31.497939 --------- dfAtributosNormalizado_60_dias_2_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 11.467883233229319--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [132, 18, 180, 36, 57, 49, 183, 64, 56,
                                         110],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.022925742467244468--> SVR GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.10184380213419596--> arbol_decision GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [100, 34, 97, 133, 110, 98, 92, 86, 43,
                                       198, 191, 93, 71, 67, 27, 95, 158, 96,
                                       155, 17],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.134076456228892--> Boosting GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [15, 190, 170, 129, 90],
                         'n_estimators': [112, 301, 19, 86, 209]})
Tiempo empleado: 11.121474937597911--> Adaboost GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [170, 473, 256, 157, 76, 424, 50, 48,
                                          427, 68],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 5.91564404964447--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [39, 5, 45, 3, 20, 8, 13, 29, 33, 49],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [35, 34, 32, 16, 12],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 23.683443049589794--> MLP GridSearchCV(cv=KFold(n_splits=5, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 146.031144901116682020-06-17 05:20:00.470733 --------- dfAtributosNormalizado_60_dias_2_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 32.07166738907496--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [189, 97, 169, 9, 87, 154, 100, 174,
                                         197, 129],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.04248266220092774--> SVR GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.24345330794652303--> arbol_decision GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [155, 176, 107, 116, 91, 178, 122, 15, 61,
                                       12, 6, 65, 153, 92, 102, 86, 152, 154,
                                       191, 131],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.4269905765851339--> Boosting GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [153, 88, 103, 156, 127],
                         'n_estimators': [201, 227, 360, 94, 218]})
Tiempo empleado: 55.615578226248424--> Adaboost GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [157, 38, 371, 155, 495, 265, 484, 437,
                                          278, 451],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 19.611560769875844--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [8, 45, 28, 6, 15, 43, 33, 22, 5, 30],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [45, 10, 6, 22, 33],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 61.809078927834825--> MLP GridSearchCV(cv=KFold(n_splits=10, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 48.3992831985155762020-06-17 08:58:13.951075 --------- dfAtributosNormalizado_60_dias_2_celdas.pkl
--> Random Forest GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=RandomForestRegressor(), n_jobs=-1,
             param_grid={'max_depth': [None, 10, 50, 100],
                         'max_features': ['auto', 'sqrt', 'log2'],
                         'n_estimators': [100, 500, 1000]})
Tiempo empleado: 66.70633787314097--> Vecino mas cercano GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=KNeighborsRegressor(), n_jobs=-1,
             param_grid={'n_neighbors': [105, 116, 199, 4, 181, 183, 122, 165,
                                         29, 141],
                         'weights': ['uniform', 'distance']})
Tiempo empleado: 0.06347738107045492--> SVR GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=SVR(), n_jobs=-1,
             param_grid={'C': [0.5, 1.0, 10, 100], 'epsilon': [0.2],
                         'gamma': ['scale', 'auto'],
                         'kernel': ('linear', 'rbf', 'poly', 'sigmoid')})
Tiempo empleado: 0.5576482852300008--> arbol_decision GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=DecisionTreeRegressor(), n_jobs=-1,
             param_grid={'max_depth': [112, 118, 76, 192, 163, 131, 145, 84,
                                       161, 75, 164, 117, 149, 176, 121, 37, 78,
                                       80, 103, 30],
                         'max_features': ['auto', 'sqrt', 'log2', None]})
Tiempo empleado: 0.899396546681722--> Boosting GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [138, 36, 43, 142, 135],
                         'n_estimators': [92, 493, 428, 386, 187]})
Tiempo empleado: 173.85633364518483--> Adaboost GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=AdaBoostRegressor(), n_jobs=-1,
             param_grid={'loss': ['linear', 'square', 'exponential'],
                         'n_estimators': [343, 111, 217, 274, 81, 26, 356, 264,
                                          434, 214],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 35.72860110998154--> GradientBoostingRegressor GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=GradientBoostingRegressor(), n_jobs=-1,
             param_grid={'max_depth': [34, 38, 5, 24, 36, 10, 3, 20, 45, 35],
                         'max_features': ['auto', 'sqrt', 'log2', None],
                         'n_estimators': [29, 13, 44, 6, 11],
                         'random_state': [None, 1, 5, 10]})
Tiempo empleado: 110.00446271101633--> MLP GridSearchCV(cv=KFold(n_splits=20, random_state=None, shuffle=False),
             estimator=MLPRegressor(),
             param_grid={'alpha': [1e-05, 0.0001, 0.001],
                         'max_iter': [1000, 2000, 5000],
                         'random_state': [0, 1, 10]})
Tiempo empleado: 136.1918162027995